openapi: 3.0.0
info:
  title: OpenTerps
  description: An Open API that contains information about terpenes, the effects,
    and the cannabis varieties that contain them.
  termsOfService: https://wayhigh.we.bs
  contact:
    email: benjamminredden@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about OpenTerps
  url: https://wayhigh.we.bs
servers:
- url: https://virtserver.swaggerhub.com/CountryFriedCoders/OpenTerps/0.0.1
tags:
- name: cannabis
  description: The plant.
- name: terpene
  description: One of the most important parts of the cannabis plant.
- name: effects
  description: The effect of said terpenes.
paths:
  /terpene:
    put:
      tags:
      - terpene
      summary: Update an existing terpene
      description: Update terpene in the api
      operationId: updateTerpene
      requestBody:
        $ref: '#/components/requestBodies/Terpene'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Terpene not found
        "405":
          description: Validation exception
    post:
      tags:
      - terpene
      summary: Add a new terpene to the api
      description: Add new terpene to the api
      operationId: addTerpene
      requestBody:
        $ref: '#/components/requestBodies/Terpene'
      responses:
        "405":
          description: Invalid input
  /terpene/findByEffect:
    get:
      tags:
      - terpene
      summary: Finds Terpenes by effect
      description: Multiple status values can be provided with comma separated strings
      operationId: findTerpenesByEffect
      parameters:
      - name: effect
        in: query
        description: Effect values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Terpene'
                x-content-type: application/xml
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Terpene'
        "400":
          description: Invalid effect value
  /terpene/{terpeneId}:
    get:
      tags:
      - terpene
      summary: Find terpene by ID
      description: Returns a single terpene
      operationId: getTerpeneById
      parameters:
      - name: terpeneId
        in: path
        description: ID of terpene to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Terpene'
            application/json:
              schema:
                $ref: '#/components/schemas/Terpene'
        "400":
          description: Invalid ID supplied
        "404":
          description: Terpene not found
    post:
      tags:
      - terpene
      summary: Updates a terpene in the api
      description: Update a single terpene in the API
      operationId: updateTerpeneByID
      parameters:
      - name: terpeneId
        in: path
        description: ID of terpene that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "405":
          description: Invalid input
    delete:
      tags:
      - terpene
      summary: Deletes a terpene
      description: Deletes a terpene from the API
      operationId: deleteTerpene
      parameters:
      - name: api_key
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: terpeneId
        in: path
        description: Terpene id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Terpene not found
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
  /user/createWithArray:
    post:
      tags:
      - user
      summary: Creates list of users with given input array
      operationId: createUsersWithArrayInput
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
      responses:
        default:
          description: successful operation
  /user/createWithList:
    post:
      tags:
      - user
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
                x-content-type: application/xml
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      example:
        firstName: firstName
        lastName: lastName
        password: password
        userStatus: 6
        phone: phone
        id: 0
        email: email
        username: username
      xml:
        name: User
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        name: name
        id: 6
      xml:
        name: Category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        name: name
        id: 1
      xml:
        name: Tag
    Effect:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Effect
    Strain:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        name: name
        id: 2
      xml:
        name: Strain
    Taste:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        name: name
        id: 5
      xml:
        name: Taste
    Smell:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        name: name
        id: 5
      xml:
        name: Smell
    Terpene:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: myrcene
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        tastes:
          type: array
          xml:
            name: taste
            wrapped: true
          items:
            $ref: '#/components/schemas/Taste'
        smells:
          type: array
          xml:
            name: smell
            wrapped: true
          items:
            $ref: '#/components/schemas/Smell'
        strains:
          type: array
          xml:
            name: strain
            wrapped: true
          items:
            $ref: '#/components/schemas/Strain'
      example:
        tastes:
        - name: name
          id: 5
        - name: name
          id: 5
        smells:
        - name: name
          id: 5
        - name: name
          id: 5
        name: myrcene
        id: 0
        category:
          name: name
          id: 6
        strains:
        - name: name
          id: 2
        - name: name
          id: 2
        tags:
        - name: name
          id: 1
        - name: name
          id: 1
      xml:
        name: Terpene
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    body:
      type: object
      properties:
        effects:
          type: string
          description: Updated effects of the pet
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      required: true
    Terpene:
      description: Terpene object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Terpene'
        application/xml:
          schema:
            $ref: '#/components/schemas/Terpene'
      required: true
